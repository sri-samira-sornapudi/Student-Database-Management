CREATE DATABASE studentOne;
USE studentOne;

CREATE TABLE Student (
    STUDENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    GPA DECIMAL(3, 2),
    ENROLLMENT_DATE DATETIME,
    MAJOR VARCHAR(100)
);
INSERT INTO Student (STUDENT_ID, FIRST_NAME, LAST_NAME, GPA, ENROLLMENT_DATE, MAJOR)
VALUES (201, 'Shivansh', 'Mahajan', 8.79, '2021-09-01 09:30:00', 'Computer Science'),
(202, 'Umesh', 'Sharma', 8.44, '2021-09-01 08:30:00', 'Mathematics'),
(203, 'Rakesh', 'Kumar', 5.60, '2021-09-01 10:00:00', 'Biology'),
(204, 'Radha', 'Sharma', 9.20, '2021-09-01 12:45:00', 'Chemistry'),
(205, 'Kush', 'Kumar', 7.85, '2021-09-01 08:30:00', 'Physics'),
(206, 'Prem', 'Chopra', 7.00, '2021-09-01 09:24:00', 'History'),
(207, 'Pankaj', 'Vats', 9.78, '2021-09-01 02:30:00', 'English'),
(208, 'Navleen', 'Kaur', 7.00, '2021-09-01 06:30:00', 'Mathematics');

CREATE TABLE Program (
    STUDENT_REF_ID INT NOT NULL,
    PROGRAM_NAME VARCHAR(100) NOT NULL,
    PROGRAM_START_DATE DATE,
    INDEX `fk_student_idx` (`STUDENT_REF_ID` ASC),
	CONSTRAINT fk_student
	FOREIGN KEY (STUDENT_REF_ID) REFERENCES Student(STUDENT_ID)
);
INSERT INTO Program (STUDENT_REF_ID, PROGRAM_NAME, PROGRAM_START_DATE)
VALUES (201, 'Computer Science', '2021-09-01 00:00:00'),
(202, 'Mathematics', '2021-09-01 00:00:00'),
(208, 'Mathematics', '2021-09-01 00:00:00'),
(205, 'Physics', '2021-09-01 00:00:00'),
(204, 'Chemistry', '2021-09-01 00:00:00'),
(207, 'Psychology', '2021-09-01 00:00:00'),
(206, 'History', '2021-09-01 00:00:00'),
(203, 'Biology', '2021-09-01 00:00:00');

CREATE TABLE Scholarship (
    STUDENT_REF_ID INT NOT NULL,
    SCHOLARSHIP_AMOUNT DECIMAL(10, 2) NOT NULL,
    SCHOLARSHIP_DATE DATE NOT NULL,
    INDEX `fk_student_scholarship_idx` (`STUDENT_REF_ID` ASC),
    CONSTRAINT fk_student_scholarship
    FOREIGN KEY (STUDENT_REF_ID) REFERENCES Student(STUDENT_ID)
    ON DELETE CASCADE
);
INSERT INTO Scholarship (STUDENT_REF_ID, SCHOLARSHIP_AMOUNT, SCHOLARSHIP_DATE)
VALUES (201, 5000, '2021-10-15 00:00:00'),
(202, 4500, '2022-08-18 00:00:00'),
(203, 3000, '2022-01-25 00:00:00'),
(201, 4000, '2021-10-15 00:00:00');

SELECT upper(FIRST_NAME) as STUDENT_NAME from student;

SELECT DISTINCT MAJOR from student;

SELECT SUBSTRING(FIRST_NAME, 1, 3)  FROM Student;

SELECT INSTR(FIRST_NAME, 'a') FROM Student WHERE FIRST_NAME = 'Shivansh';

SELECT MAJOR,LENGTH(MAJOR) FROM Student GROUP BY(MAJOR);

SELECT REPLACE(FIRST_NAME, 'a', 'A') FROM Student;

SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS COMPLETE_NAME FROM Student;

SELECT * FROM Student ORDER BY FIRST_NAME , MAJOR DESC;

SELECT * from Student WHERE FIRST_NAME IN ('Prem' , 'Shivansh');

SELECT * from Student WHERE FIRST_NAME NOT IN ('Prem', 'Shivansh');

SELECT * FROM Student WHERE FIRST_NAME LIKE '%a';

SELECT * FROM Student WHERE FIRST_NAME LIKE '____a';

SELECT * FROM Student WHERE GPA BETWEEN 9.00 AND 9.99;

SELECT Major, COUNT(*) as TOTAL_COUNT FROM Student WHERE MAJOR = 'Computer Science';

SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM Student WHERE GPA BETWEEN 8.5 and 9.5;

SELECT MAJOR, COUNT(MAJOR) from Student group by MAJOR order by COUNT(MAJOR) DESC;

SELECT 
    Student.FIRST_NAME,
    Student.LAST_NAME,
    Scholarship.SCHOLARSHIP_AMOUNT,
    Scholarship.SCHOLARSHIP_DATE
FROM 
    Student
INNER JOIN 
    Scholarship ON Student.STUDENT_ID = Scholarship.STUDENT_REF_ID;
    
SELECT * FROM Student WHERE student_id % 2 != 0;

SELECT * FROM Student WHERE student_id % 2 = 0;

SELECT 
    Student.FIRST_NAME,
    Student.LAST_NAME,
    Scholarship.SCHOLARSHIP_AMOUNT,
    Scholarship.SCHOLARSHIP_DATE
FROM 
    Student
LEFT JOIN 
    Scholarship ON Student.STUDENT_ID = Scholarship.STUDENT_REF_ID;
    
SELECT * from Student ORDER BY GPA DESC LIMIT 5;

SELECT * FROM Student ORDER BY GPA DESC LIMIT 5, 1;

SELECT * FROM Student s1 
WHERE 4 = (
    SELECT COUNT(DISTINCT (s2.GPA)) 
    FROM Student s2
    WHERE s2.GPA >= s1.GPA
);

SELECT s1.* FROM Student s1, Student s2 WHERE s1.GPA = s2.GPA AND s1.Student_id != s2.Student_id;

SELECT MAX(GPA) FROM Student
WHERE GPA NOT IN(SELECT MAX(GPA) FROM Student);

SELECT * FROM Student 
UNION ALL
SELECT * FROM Student ORDER BY STUDENT_ID;

SELECT STUDENT_ID FROM Student 
WHERE STUDENT_ID NOT IN (SELECT STUDENT_REF_ID FROM Scholarship);

SELECT MAJOR, COUNT(MAJOR) AS MAJOR_COUNT FROM Student GROUP BY MAJOR HAVING COUNT(MAJOR) < 4;

SELECT MAJOR, COUNT(MAJOR) AS ALL_MAJOR FROM Student GROUP BY MAJOR;

SELECT * FROM Student WHERE STUDENT_ID = (SELECT MAX(STUDENT_ID) FROM STUDENT);

SELECT * FROM Student WHERE STUDENT_ID = (SELECT MIN(STUDENT_ID) FROM Student);

SELECT * 
FROM (
    SELECT * 
    FROM Student 
    ORDER BY STUDENT_ID DESC 
    LIMIT 5
) AS subquery
ORDER BY STUDENT_ID;

SELECT DISTINCT GPA FROM Student S1 
WHERE 3 >= (SELECT COUNT(DISTINCT GPA) FROM Student S2 WHERE S1.GPA >= S2.GPA) ORDER BY S1.GPA;

SELECT DISTINCT GPA FROM Student S1 
WHERE n >= (SELECT COUNT(DISTINCT GPA) FROM Student S2 WHERE S1.GPA <= S2.GPA) ORDER BY S1.GPA DESC;

SELECT DISTINCT GPA FROM Student S1 
WHERE (SELECT COUNT(DISTINCT GPA) FROM Student S2 WHERE S1.GPA <= S2.GPA) ORDER BY S1.GPA DESC;

SELECT MAJOR, MAX(GPA) as MAXGPA FROM Student GROUP BY MAJOR;

SELECT FIRST_NAME, GPA FROM Student WHERE GPA = (SELECT MAX(GPA) FROM Student);

UPDATE Student SET GPA = 4.0 WHERE MAJOR = 'Computer Science';

SELECT MAJOR, AVG(GPA) AS AVERAGE_GPA FROM Student GROUP BY MAJOR;

SELECT * FROM Student ORDER BY GPA DESC LIMIT 3;

SELECT MAJOR, COUNT(STUDENT_ID) AS HIGH_GPA_COUNT FROM Student WHERE GPA > 3.5 GROUP BY MAJOR;

SELECT * FROM Student WHERE GPA = (SELECT GPA FROM Student WHERE FIRST_NAME = 'Shivansh' 
AND LAST_NAME = 'Mahajan');


